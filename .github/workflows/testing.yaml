name: Build and Deploy to GKE

on:
  push:
    branches: [ main ]

env:
  GKE_CLUSTER: gke-staging    # Add your cluster name here.
  GKE_REGION: us-west2   # Add your cluster zone here.
  DEPLOYMENT_NAME: pwallet-testnet-deployment # Add your deployment name here.
  IMAGE: wallet
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@master
        with:
          version: '303.0.0'
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}
          export_default_credentials: true

      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |-
          gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - name: get-credentials
        uses: google-github-actions/get-gke-credentials@main
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_REGION }}

      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/${{ env.IMAGE }}:${{ github.sha }}" \
            --build-arg REACT_APP_PROXY_API=${{ secrets.PROXY_API }} --build-arg REACT_APP_CHAIN_ID=${{secrets.TESTING_REACT_APP_CHAIN_ID}} --build-arg REACT_APP_CHAIN_NAME=${{secrets.TESTING_REACT_APP_CHAIN_NAME}} --build-arg REACT_APP_WEBSITE_URL=${{secrets.TESTING_REACT_APP_WEBSITE_URL}} --build-arg REACT_APP_API_KEY=${{secrets.TESTING_REACT_APP_API_KEY}} --build-arg REACT_APP_TENDERMINT_RPC_ENDPOINT=${{secrets.TESTING_REACT_APP_TENDERMINT_RPC_ENDPOINT}} --build-arg REACT_APP_EXPLORER_API=${{secrets.TESTING_REACT_APP_EXPLORER_API}} .

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/${{ env.IMAGE }}:${{ github.sha }}"

      # Set up kustomize
      - name: Set up Kustomize
        run: |-
          curl --location https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.2.0/kustomize_v4.2.0_linux_amd64.tar.gz | tar xz
          chmod u+x ./kustomize

      # Deploy the Docker image to the GKE cluster
      - name: Deploy to GKE
        run: |-
          ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/${{ env.IMAGE }}:${{ github.sha }}
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME